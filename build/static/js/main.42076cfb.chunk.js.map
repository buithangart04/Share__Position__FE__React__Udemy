{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","ReactDom","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","Fragment","User","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","setUserId","useCallback","uid","localStorage","setItem","JSON","stringify","removeItem","useEffect","storedData","parse","getItem","path","Provider","value","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.42076cfb.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userId:null,\r\n  token:null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from \"react\";\r\nimport \"./MainHeader.css\";\r\n\r\nconst MainHeader = (props) => {\r\n  return <header className=\"main-header\">{props.children}</header>;\r\n};\r\n\r\nexport default MainHeader;\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./NavLinks.css\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nconst NavLinks = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  return (\r\n    <ul className=\"nav-links\">\r\n      <li>\r\n        <NavLink to=\"/\" exact>\r\n          ALL USERS\r\n        </NavLink>\r\n      </li>\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\r\n        </li>\r\n      )}\r\n\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/places/new\">ADD PLACES</NavLink>\r\n        </li>\r\n      )}\r\n      {!auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn&& <button onClick={auth.logout}>LOGOUT</button>}\r\n    </ul>\r\n  );\r\n};\r\nexport default NavLinks;\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport \"./SideDrawer.css\";\r\nconst SideDrawer = props => {\r\n  const content = (\r\n    <CSSTransition\r\n      in={props.show}\r\n      timeout={200}\r\n      classNames=\"slide-in-left\"\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <aside className=\"side-drawer\">{props.children}</aside>\r\n    </CSSTransition>\r\n  );\r\n  return ReactDom.createPortal(content, document.getElementById(\"drawer-hook\"));\r\n};\r\nexport default SideDrawer;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport MainHeader from \"./MainHeader\";\r\nimport NavLinks from \"./NavLinks\";\r\n\r\nimport \"./MainNavigation.css\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport Backdrop from \"../UIElements/Backdrop\";\r\n\r\nconst MainNavigation = (props) => {\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n  const openDrawer = () => {\r\n    setDrawerIsOpen(true);\r\n  };\r\n  const closeDrawer = () => {\r\n    setDrawerIsOpen(false);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {/* when drawer open then enable backdrop to click */}\r\n      {drawerIsOpen && <Backdrop onClick={closeDrawer}/>}\r\n\r\n        <SideDrawer show={drawerIsOpen}>\r\n          <nav className=\"main-navigation__drawer-nav\">\r\n            <NavLinks />\r\n          </nav>\r\n        </SideDrawer>\r\n      <MainHeader>\r\n        <button className=\"main-navigation__menu-btn\" onClick={openDrawer}>\r\n          <span />\r\n          <span />\r\n          <span />\r\n        </button>\r\n        <h1 className=\"main-navigation__title\">\r\n          <Link to=\"/\">Your Places</Link>\r\n        </h1>\r\n        <nav className=\"main-navigation__header-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </MainHeader>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import React, { useCallback, useState, useEffect, Suspense } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n  Route,\n} from \"react-router-dom\";\n\n// import NewPlace from \"./places/pages/NewPlace\";\n// import User from \"./user/pages/User\";\n// import UpdatePlace from \"./places/pages/UpdatePlace\";\n// import Auth from \"./user/pages/Auth\";\n// import UserPlaces from \"./places/pages/UserPlaces\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport \"./App.css\";\nimport LoadingSpinner from \"./shared/components/UIElements/LoadingSpinner\";\n\nconst User = React.lazy(() => import(\"./user/pages/User\"));\nconst NewPlace = React.lazy(() => import(\"./places/pages/NewPlace\"));\nconst UserPlaces = React.lazy(() => import(\"./places/pages/UserPlaces\"));\nconst UpdatePlace = React.lazy(() => import(\"./places/pages/UpdatePlace\"));\nconst Auth = React.lazy(() => import(\"./user/pages/Auth\"));\n\nconst App = () => {\n  const [token, setToken] = useState(null);\n  const [userId, setUserId] = useState(null);\n\n  const login = useCallback((uid, token) => {\n    setToken(token);\n    setUserId(uid);\n    localStorage.setItem(\"userData\", JSON.stringify({ userId: uid, token }));\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    localStorage.removeItem(\"userData\");\n  }, []);\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\n    if (storedData && storedData.token) {\n      login(storedData.userId, storedData.token);\n    }\n  }, [login]);\n  let routes;\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <User />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\" exact>\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <User />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\" exact>\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n  return (\n    <AuthContext.Provider\n      value={{ isLoggedIn: !!token, login, logout, userId, token }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner />\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}