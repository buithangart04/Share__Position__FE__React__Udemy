{"version":3,"sources":["util/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/components/FormElements/ImageUpload.js","places/pages/NewPlace.js"],"names":["VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","value","validators","isValid","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","validator","trim","test","inputReducer","state","action","isTouched","Input","props","useReducer","initialValid","initialValue","inputState","dispatch","id","onInput","useEffect","changeHandler","event","target","touchHandler","element","placeholder","onBlur","onChange","rows","row","className","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidility","formState","useCallback","inputData","formValidity","ImageUpload","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","pickedFile","fileIsValid","files","center","src","alt","onClick","current","click","NewPlace","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","title","description","address","image","inValid","inputHandler","history","useHistory","placeSubmitHandler","a","preventDefault","formData","FormData","append","userId","process","Authorization","token","push","Fragment","onClear","asOverlay","onSubmit","disabled"],"mappings":"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","file":"static/js/5.ba138cb7.chunk.js","sourcesContent":["const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useReducer ,useEffect} from \"react\";\r\nimport { validate } from \"../../../util/validators\";\r\nimport \"./Input.css\";\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return { ...state, isValid: validate(action.val,action.validators), value: action.val };\r\n    case \"TOUCH\":\r\n      return {...state,isTouched:true}\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    isValid: props.initialValid||false,\r\n    value: props.initialValue||'',\r\n    isTouched:false\r\n  });\r\n  const {id ,onInput}= props;\r\n  const {isValid, value} = inputState;\r\n\r\n  useEffect(()=>{\r\n    onInput(id,value,isValid);\r\n  }, [id,value,isValid,onInput]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({val:event.target.value,type :\"CHANGE\",validators:props.validators})\r\n  };\r\n  const touchHandler= ()=>{\r\n    dispatch({\r\n      type:\"TOUCH\"\r\n    })\r\n  }\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        value={inputState.value}\r\n        onBlur={touchHandler}\r\n        onChange={changeHandler}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.row || 3}\r\n        value={inputState.value}\r\n        onBlur={touchHandler}\r\n        onChange={changeHandler}\r\n      />\r\n    );\r\n  return (\r\n    <div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from \"react\";\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) continue;\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case \"SET_DATA\":\r\n      return { ...state, inputs: action.inputs, isValid: action.formIsValid };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidility) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidility,\r\n  });\r\n  const inputhandler = useCallback((id, value, isValid) => {\r\n    dispatch({ type: \"INPUT_CHANGE\", value, isValid, inputId: id });\r\n  }, []);\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n  return [formState, inputhandler, setFormData];\r\n};\r\n","import React, { useRef, useState, useEffect } from \"react\";\n\nimport Button from \"./Button\";\nimport \"./ImageUpload.css\";\n\nconst ImageUpload = (props) => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n  const filePickerRef = useRef();\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n  const pickedHandler = (event) => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: \"none\" }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && \"center\"}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please select an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid&& <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import React, { useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../util/validators\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\n\r\nimport \"./PlaceForm.css\";\r\n\r\nconst NewPlace = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      image: {\r\n        value: null,\r\n        inValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n  const history = useHistory();\r\n  const placeSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"title\", formState.inputs.title.value);\r\n    formData.append(\"address\", formState.inputs.address.value);\r\n    formData.append(\"description\", formState.inputs.description.value);\r\n    formData.append(\"creator\", auth.userId);\r\n    formData.append(\"image\", formState.inputs.image.value);\r\n\r\n    try {\r\n      await sendRequest(process.env.REACT_APP_BACKEND_URL+\"/places\", \"POST\", formData, {\r\n        Authorization: \"Bearer \" + auth.token,\r\n      });\r\n      history.push(\"/\");\r\n    } catch (err) {}\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n        <Input\r\n          id=\"title\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          errorText=\"Please enter a valid title\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"address\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Address\"\r\n          errorText=\"Please enter a valid address\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          element=\"textarea\"\r\n          label=\"Description\"\r\n          errorText=\"Please enter a valid description (at least 5 characters).\"\r\n          validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(5)]}\r\n          onInput={inputHandler}\r\n        />\r\n        <ImageUpload\r\n          id=\"image\"\r\n          onInput={inputHandler}\r\n          errorText=\" Please provide an image.\"\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          ADD PLACE\r\n        </Button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NewPlace;\r\n"],"sourceRoot":""}