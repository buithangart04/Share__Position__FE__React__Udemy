{"version":3,"sources":["util/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/components/UIElements/Card.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/components/FormElements/ImageUpload.js","user/pages/Auth.js"],"names":["VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","value","validators","isValid","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","validator","trim","test","Card","props","className","style","children","inputReducer","state","action","isTouched","Input","useReducer","initialValid","initialValue","inputState","dispatch","id","onInput","useEffect","changeHandler","event","target","touchHandler","element","placeholder","onBlur","onChange","rows","row","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidility","formState","useCallback","inputData","formValidity","ImageUpload","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","src","alt","onClick","current","click","Auth","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","useHttpClient","isLoading","error","sendRequest","clearError","email","password","inputHandler","setFormData","authSubmitHandler","a","preventDefault","process","JSON","stringify","responseData","login","userId","token","formData","FormData","append","name","image","Fragment","onClear","asOverlay","onSubmit","disabled","inverse","undefined","prevMode"],"mappings":"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","file":"static/js/4.c2efc56d.chunk.js","sourcesContent":["const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useReducer ,useEffect} from \"react\";\r\nimport { validate } from \"../../../util/validators\";\r\nimport \"./Input.css\";\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return { ...state, isValid: validate(action.val,action.validators), value: action.val };\r\n    case \"TOUCH\":\r\n      return {...state,isTouched:true}\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    isValid: props.initialValid||false,\r\n    value: props.initialValue||'',\r\n    isTouched:false\r\n  });\r\n  const {id ,onInput}= props;\r\n  const {isValid, value} = inputState;\r\n\r\n  useEffect(()=>{\r\n    onInput(id,value,isValid);\r\n  }, [id,value,isValid,onInput]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({val:event.target.value,type :\"CHANGE\",validators:props.validators})\r\n  };\r\n  const touchHandler= ()=>{\r\n    dispatch({\r\n      type:\"TOUCH\"\r\n    })\r\n  }\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        value={inputState.value}\r\n        onBlur={touchHandler}\r\n        onChange={changeHandler}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.row || 3}\r\n        value={inputState.value}\r\n        onBlur={touchHandler}\r\n        onChange={changeHandler}\r\n      />\r\n    );\r\n  return (\r\n    <div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from \"react\";\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) continue;\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case \"SET_DATA\":\r\n      return { ...state, inputs: action.inputs, isValid: action.formIsValid };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidility) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidility,\r\n  });\r\n  const inputhandler = useCallback((id, value, isValid) => {\r\n    dispatch({ type: \"INPUT_CHANGE\", value, isValid, inputId: id });\r\n  }, []);\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n  return [formState, inputhandler, setFormData];\r\n};\r\n","import React, { useRef, useState, useEffect } from \"react\";\n\nimport Button from \"./Button\";\nimport \"./ImageUpload.css\";\n\nconst ImageUpload = (props) => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n  const filePickerRef = useRef();\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n  const pickedHandler = (event) => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: \"none\" }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && \"center\"}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please select an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid&& <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import React, { useState, useContext } from 'react';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE\r\n} from \"../../util/validators\";\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport './Auth.css';\r\n\r\nconst Auth = () => {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      password: {\r\n        value: '',\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\n  const switchModeHandler = () => {\r\n    if (!isLoginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n          image: undefined\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: '',\r\n            isValid: false\r\n          },\r\n          image: {\r\n            value: null,\r\n            isValid: false\r\n          }\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setIsLoginMode(prevMode => !prevMode);\r\n  };\r\n\r\n  const authSubmitHandler = async event => {\r\n    event.preventDefault();\r\n\r\n    if (isLoginMode) {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL+'/users/login',\r\n          'POST',\r\n          JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value\r\n          }),\r\n          {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        );\r\n        auth.login(responseData.userId,responseData.token);\r\n      } catch (err) {}\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append('email', formState.inputs.email.value);\r\n        formData.append('name', formState.inputs.name.value);\r\n        formData.append('password', formState.inputs.password.value);\r\n        formData.append('image', formState.inputs.image.value);\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL+'/users/signup',\r\n          'POST',\r\n          formData\r\n        );\r\n\r\n        auth.login(responseData.userId,responseData.token);\r\n      } catch (err) {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className=\"authentication\">\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>Login Required</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          {!isLoginMode && (\r\n            <Input\r\n              element=\"input\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              label=\"Your Name\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please enter a name.\"\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          {!isLoginMode && (\r\n            <ImageUpload center id=\"image\" onInput={inputHandler} errorText=\" Please provide an image.\" />\r\n          )}\r\n          <Input\r\n            element=\"input\"\r\n            id=\"email\"\r\n            type=\"email\"\r\n            label=\"E-Mail\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid email address.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            element=\"input\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"Please enter a valid password, at least 6 characters.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\r\n          </Button>\r\n        </form>\r\n        <Button inverse onClick={switchModeHandler}>\r\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\r\n        </Button>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"sourceRoot":""}